name: github pages

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '10'
          
      - name: Configure git
        uses: fusion-engineering/setup-git-credentials@v2
        with:
          credentials: ${{secrets.PUBLIC_READ_PAT}}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - name: Capture current site baseline
        run: |
          URL="https://straz.to/resume/"
          HEADERS=$(curl -sI -L -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "${URL}?bust=baseline")
          BASELINE_ETAG=$(echo "$HEADERS" | grep -i '^ETag:' | sed 's/^ETag:[[:space:]]*//I' | tr -d '\r"' || true)
          BASELINE_LASTMOD=$(echo "$HEADERS" | grep -i '^Last-Modified:' | sed 's/^Last-Modified:[[:space:]]*//I' | tr -d '\r' || true)
          BASELINE_HASH=$(curl -sL -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "${URL}?bust=baseline" | sha256sum | cut -d' ' -f1 || true)
          echo "Baseline etag: ${BASELINE_ETAG}"
          echo "Baseline last-modified: ${BASELINE_LASTMOD}"
          echo "Baseline hash: ${BASELINE_HASH}"
          echo "BASELINE_ETAG=${BASELINE_ETAG}" >> $GITHUB_ENV
          echo "BASELINE_LASTMOD=${BASELINE_LASTMOD}" >> $GITHUB_ENV
          echo "BASELINE_HASH=${BASELINE_HASH}" >> $GITHUB_ENV
      - name: Find theme
        run: |
          echo "SITE_THEME=$(./get-theme.js)" >> $GITHUB_ENV
      - run: npm run build -- --theme ${{ env.SITE_THEME }}
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
      - name: Wait for content to refresh
        id: wait_content
        run: |
          URL="https://straz.to/resume/"
          echo "Waiting for content at $URL to differ from baseline..."
          echo "Baseline etag: $BASELINE_ETAG"
          echo "Baseline last-modified: $BASELINE_LASTMOD"
          echo "Baseline hash: $BASELINE_HASH"
          changed=false
          etag=""
          lastmod=""
          for i in $(seq 1 60); do
            HEADERS=$(curl -sI -L -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "${URL}?bust=$(date +%s%3N)")
            etag=$(echo "$HEADERS" | grep -i '^ETag:' | sed 's/^ETag:[[:space:]]*//I' | tr -d '\r"')
            lastmod=$(echo "$HEADERS" | grep -i '^Last-Modified:' | sed 's/^Last-Modified:[[:space:]]*//I' | tr -d '\r')
            if [ -n "$etag" ] && [ "$etag" != "$BASELINE_ETAG" ]; then
              changed=true
              echo "Content updated by ETag (new: $etag)"
              break
            fi
            if [ -n "$lastmod" ] && [ "$lastmod" != "$BASELINE_LASTMOD" ]; then
              changed=true
              echo "Content updated by Last-Modified (new: $lastmod)"
              break
            fi
            BODY_HASH=$(curl -sL -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' "${URL}?bust=$(date +%s%3N)" | sha256sum | cut -d' ' -f1)
            if [ -n "$BASELINE_HASH" ] && [ -n "$BODY_HASH" ] && [ "$BODY_HASH" != "$BASELINE_HASH" ]; then
              changed=true
              echo "Content updated by hash (new: $BODY_HASH)"
              break
            fi
            echo "Attempt $i: unchanged (etag=$etag last-modified=$lastmod), retrying in 5s..."
            sleep 5
          done
          echo "changed=$changed" >> $GITHUB_OUTPUT
          echo "etag=${etag}" >> $GITHUB_OUTPUT
          echo "last_modified=${lastmod}" >> $GITHUB_OUTPUT
          if [ "$changed" = true ]; then
            echo "::notice title=Content updated::ETag=$etag, Last-Modified=$lastmod"
          else
            echo "::notice title=Content unchanged::Proceeding with cache-busted fetch regardless"
          fi
          exit 0
      - name: Build pdf
        uses: misaelnieto/web_to_pdf_action@master
        with:
          # bust=${{ github.sha }} forces a cache bust
          webPageURL: https://straz.to/resume/?bust=${{ github.sha }}
          outputFile: ./resume-draft.pdf
          usePuppeteer: true
          useScreen: true
          # "format": "letter", 
          pdfOptions: '{"margin": {"top": "0mm", "left": "0mm", "right": "0mm", "bottom": "0mm"}}'
      - name: Fix pdf
        run: node fix-pdf.js resume-draft.pdf resume.pdf
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
            tag_name: daily
            files: resume.pdf
            body: |
              Daily build of pdf, regenerated every commit.
            github_token: ${{ secrets.GITHUB_TOKEN }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
